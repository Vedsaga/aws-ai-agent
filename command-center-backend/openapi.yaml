openapi: 3.0.0
info:
  title: Command Center Backend API
  description: |
    API for disaster response command center providing real-time event updates 
    and AI-powered query capabilities for earthquake response simulation.
  version: 1.0.0
  contact:
    name: Command Center Team

servers:
  - url: https://{apiId}.execute-api.{region}.amazonaws.com/prod
    description: Production API
    variables:
      apiId:
        default: your-api-id
        description: API Gateway ID
      region:
        default: us-east-1
        description: AWS Region

security:
  - ApiKeyAuth: []

paths:
  /data/updates:
    get:
      summary: Get event updates
      description: Retrieve incremental event updates based on timestamp and optional domain filter
      operationId: getUpdates
      tags:
        - Data
      parameters:
        - name: since
          in: query
          required: true
          description: ISO 8601 timestamp - returns events after this time
          schema:
            type: string
            format: date-time
          example: "2023-02-06T00:00:00Z"
        - name: domain
          in: query
          required: false
          description: Filter events by domain
          schema:
            type: string
            enum:
              - MEDICAL
              - FIRE
              - STRUCTURAL
              - LOGISTICS
              - COMMUNICATION
          example: MEDICAL
      responses:
        '200':
          description: Successful response with event updates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatesResponse'
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /agent/query:
    post:
      summary: Process natural language query
      description: Use AI to interpret and respond to natural language queries about the disaster situation
      operationId: processQuery
      tags:
        - Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
            examples:
              simpleQuery:
                summary: Simple query
                value:
                  text: "What are the most urgent needs right now?"
              queryWithSession:
                summary: Query with session continuity
                value:
                  text: "Show me medical incidents in that area"
                  sessionId: "session-abc-123"
              queryWithMapState:
                summary: Query with current map context
                value:
                  text: "Show critical incidents in this view"
                  currentMapState:
                    center: [37.0, 37.5]
                    zoom: 10
      responses:
        '200':
          description: Successful query response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentResponse'
        '400':
          description: Bad request - invalid query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /agent/action:
    post:
      summary: Execute pre-defined action
      description: Execute a pre-defined action that maps to a common query pattern
      operationId: executeAction
      tags:
        - Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRequest'
            examples:
              areaBriefing:
                summary: Generate area briefing
                value:
                  actionId: "GENERATE_AREA_BRIEFING"
                  payload:
                    area: "Nurdağı"
                    includeResources: true
              criticalIncidents:
                summary: Show critical incidents
                value:
                  actionId: "SHOW_CRITICAL_INCIDENTS"
                  payload:
                    domain: "MEDICAL"
      responses:
        '200':
          description: Successful action execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentResponse'
        '400':
          description: Bad request - invalid action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication

  schemas:
    UpdatesResponse:
      type: object
      required:
        - latestTimestamp
      properties:
        latestTimestamp:
          type: string
          format: date-time
          description: Latest timestamp in the returned data
          example: "2023-02-06T12:30:00Z"
        mapUpdates:
          type: object
          properties:
            mapAction:
              type: string
              enum: [APPEND, REPLACE]
              description: How to apply map updates
              example: APPEND
            mapLayers:
              type: array
              items:
                $ref: '#/components/schemas/MapLayer'
        criticalAlerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'

    QueryRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Natural language query
          example: "Show me all critical medical incidents"
        sessionId:
          type: string
          description: Session ID for conversation continuity
          example: "session-abc-123"
        currentMapState:
          type: object
          properties:
            center:
              type: array
              items:
                type: number
              minItems: 2
              maxItems: 2
              description: Map center coordinates [lon, lat]
              example: [37.0, 37.5]
            zoom:
              type: number
              description: Current zoom level
              example: 10

    ActionRequest:
      type: object
      required:
        - actionId
      properties:
        actionId:
          type: string
          description: Pre-defined action identifier
          example: "GENERATE_AREA_BRIEFING"
        payload:
          type: object
          description: Action-specific parameters
          additionalProperties: true

    AgentResponse:
      type: object
      required:
        - simulationTime
        - timestamp
        - chatResponse
        - mapAction
        - mapLayers
      properties:
        simulationTime:
          type: string
          description: Human-readable simulation time
          example: "Day 1, 12:30"
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp
          example: "2023-02-06T12:30:00Z"
        chatResponse:
          type: string
          description: Natural language response from AI
          example: "I found 8 critical medical incidents in the last 6 hours..."
        mapAction:
          type: string
          enum: [REPLACE, APPEND]
          description: How to apply map updates
          example: REPLACE
        viewState:
          $ref: '#/components/schemas/ViewState'
        mapLayers:
          type: array
          items:
            $ref: '#/components/schemas/MapLayer'
        tabularData:
          type: object
          description: Optional structured data for tables
          additionalProperties: true
        uiContext:
          type: object
          properties:
            suggestedActions:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    example: "Show available medical resources"
                  actionId:
                    type: string
                    example: "SHOW_MEDICAL_RESOURCES"
                  payload:
                    type: object
                    additionalProperties: true
        clientStateHint:
          type: object
          properties:
            activeDomainFilter:
              type: string
              example: "MEDICAL"

    MapLayer:
      type: object
      required:
        - layerId
        - layerName
        - geometryType
        - style
        - data
      properties:
        layerId:
          type: string
          description: Unique layer identifier
          example: "incidents-medical"
        layerName:
          type: string
          description: Display name for the layer
          example: "Medical Incidents"
        geometryType:
          type: string
          enum: [Point, Polygon, LineString]
          description: GeoJSON geometry type
          example: Point
        style:
          type: object
          properties:
            icon:
              type: string
              description: Icon name for Point layers
              example: "MEDICAL_EMERGENCY"
            color:
              type: string
              description: Hex color code
              example: "#DC2626"
            size:
              type: number
              description: Size for Point layers
              example: 8
            fillColor:
              type: string
              description: Fill color for Polygon layers
              example: "#DC2626"
            fillOpacity:
              type: number
              description: Opacity (0-1) for Polygon layers
              example: 0.3
        data:
          type: object
          description: GeoJSON FeatureCollection
          properties:
            type:
              type: string
              enum: [FeatureCollection]
            features:
              type: array
              items:
                type: object
                description: GeoJSON Feature

    Alert:
      type: object
      required:
        - alertId
        - timestamp
        - severity
        - title
        - summary
        - location
      properties:
        alertId:
          type: string
          example: "alert-456"
        timestamp:
          type: string
          format: date-time
          example: "2023-02-06T12:15:00Z"
        severity:
          type: string
          enum: [CRITICAL, HIGH, MEDIUM, LOW]
          example: CRITICAL
        title:
          type: string
          example: "Medical Emergency"
        summary:
          type: string
          example: "Multiple casualties reported at collapsed building"
        location:
          type: object
          required:
            - lat
            - lon
          properties:
            lat:
              type: number
              example: 37.4567
            lon:
              type: number
              example: 37.0123

    ViewState:
      type: object
      properties:
        bounds:
          type: object
          properties:
            southwest:
              type: object
              properties:
                lat:
                  type: number
                lon:
                  type: number
            northeast:
              type: object
              properties:
                lat:
                  type: number
                lon:
                  type: number
        center:
          type: object
          properties:
            lat:
              type: number
            lon:
              type: number
        zoom:
          type: number

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Machine-readable error code
              example: "INVALID_REQUEST"
            message:
              type: string
              description: Human-readable error message
              example: "Missing required parameter: since"
            details:
              type: object
              description: Additional error context
              additionalProperties: true

tags:
  - name: Data
    description: Direct data access endpoints
  - name: Agent
    description: AI-powered query and action endpoints
